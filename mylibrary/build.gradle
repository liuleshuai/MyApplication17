if (isModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android["externalCompileSdkVersion"]
    buildToolsVersion rootProject.ext.android["externalBuildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["externalMinSdkVersion"]
        targetSdkVersion rootProject.ext.android["externalTargetSdkVersion"]
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            if (isModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //合并到主项目时debug文件夹下的java文件就全部被排除了
                    exclude 'debug/**'
                }
            }
        }
    }
//    防止资源冲突
    resourcePrefix "syj_"
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:${rootProject.ext.android["androidSupportVersion"]}"
    testCompile 'junit:junit:4.12'
    // 路由跳转
    compile 'com.alibaba:arouter-api:latest.integration'
    annotationProcessor 'com.alibaba:arouter-compiler:latest.integration'
    compile project(':common')
}
