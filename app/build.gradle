apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
/*    signingConfigs {
        release {
            keyAlias 'liuleshuai54321'
            keyPassword 'liuleshuai'
            storeFile file('C:/Users/67017/AndroidStudioProjects/lk54321.jks')
            storePassword 'lk54321'
        }
    }*/
    compileSdkVersion rootProject.ext.android["externalCompileSdkVersion"]
    buildToolsVersion rootProject.ext.android["externalBuildToolsVersion"]
    defaultConfig {
        applicationId "com.example.a67017.myapplication"
        minSdkVersion rootProject.ext.android["externalMinSdkVersion"]
        targetSdkVersion rootProject.ext.android["externalTargetSdkVersion"]
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //使用renderscript 兼容包 高斯模糊
        renderscriptTargetApi 25
        renderscriptSupportModeEnabled true

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        //解决：Jar包里边的配置文件冲突了,AS不知道用哪个了
        packagingOptions {
            exclude 'META-INF/rxjava.properties'
        }

    }

    flavorDimensions "default"

    productFlavors {
        default_channel { dimension "default" }
/*        wandoujia {dimension "default" }
        _360 {dimension "default" }
        tengxun {dimension "default" }
        yingyongbao {dimension "default" }
        xiaomi {dimension "default" }
        baidu {dimension "default" }
        huawei {dimension "default" }
        jifeng {dimension "default" }*/
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //apk命名
            android.applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    //这里修改apk文件名
                    def fileName = "LK-${defaultConfig.versionCode}-${defaultConfig.versionName}-${releaseTime()}.apk"
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        outputFileName = fileName
                    }
                }
            }
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            zipAlignEnabled false
        }
    }

    //打包不检查
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dataBinding {
        enabled = true;
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.1.1'
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation project(':extraLibrary:mylibrary')
//    compile(name: 'mylibrary-1.0', ext: 'aar') // SDK 测试生产aar文件

    implementation project(':extraLibrary:common')
    implementation "com.android.support:appcompat-v7:${rootProject.ext.android["androidSupportVersion"]}"
    implementation "com.android.support:design:${rootProject.ext.android["androidSupportVersion"]}"
    implementation "com.android.support:cardview-v7:${rootProject.ext.android["androidSupportVersion"]}"
    implementation "com.android.support:support-v4:${rootProject.ext.android["androidSupportVersion"]}"
    // 枚举注解
    implementation "com.android.support:support-annotations:${rootProject.ext.android["androidSupportVersion"]}"
    // 添加MultiDex支持库的依赖
    implementation 'com.android.support:multidex:1.0.1'
    //butterKnife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    //路由
    annotationProcessor 'com.alibaba:arouter-compiler:latest.integration'
}